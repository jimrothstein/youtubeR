name: R-CMD-check

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    strategy:
      fail-fast: true
      matrix:
        config:
          - {os: ubuntu-latest, r: 'release'}
          - {os: ubuntu-latest, r: 'devel'}
          - {os: macOS-latest, r: 'release'}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    steps:
    - uses: actions/checkout@v2

    - uses: r-lib/actions/setup-r@v2
      with:
        r-version: ${{ matrix.config.r }}

    - name: Install system dependencies
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y libcurl4-openssl-dev

    - uses: r-lib/actions/setup-pandoc@v1

    - name: Query dependencies
      run: |
        install.packages('remotes')
        saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
        writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
      shell: Rscript {0}

    - name: Cache R packages
      uses: actions/cache@v2
      with:
        path: ${{ env.R_LIBS_USER }}
        key: ${{ runner.os }}-${{ matrix.config.r }}-1-${{ hashFiles('.github/R-version') }}-${{ hashFiles('.github/depends.Rds') }}
        restore-keys: ${{ runner.os }}-${{ matrix.config.r }}-1-${{ hashFiles('.github/R-version') }}-

    - name: Install dependencies
      run: |
        install.packages("remotes")
        remotes::install_deps(dependencies = TRUE)
        remotes::install_cran("rcmdcheck")
      shell: Rscript {0}

    - name: Check
      env:
        _R_CHECK_CRAN_INCOMING_: false
      run: rcmdcheck::rcmdcheck(args = c("--no-manual", "--no-examples", "--as-cran"), error_on = "error", check_dir = "check")
      shell: Rscript {0}

    - name: Upload check results
      if: failure()
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.config.os }} (${{ matrix.config.r }}) logs
        path: check
